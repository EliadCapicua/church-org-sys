model Organization {
  id        String   @id @default(cuid())
  name      String
  legalName String?
  website   String?
  addressId String?  @unique
  slug      String   @unique
  createdAt DateTime @default(now()) @db.Timestamptz()
  updatedAt DateTime @default(now()) @updatedAt @db.Timestamptz()

  OwnedAddresses Address[] @relation("OrganizationOwnedAddresses") // All Addresses under the Organization
  Address        Address?  @relation("OrganizationAddress", fields: [addressId], references: [id], onDelete: SetNull) // The Address for the Organization itself
  Admins         Admin[]
  Owners         Owner[]
  Managers       Manager[]

  @@schema("org")
}

model Admin {
  id             String       @id @default(cuid())
  organizationId String
  userId         String
  createdAt      DateTime     @default(now()) @db.Timestamptz()
  updatedAt      DateTime     @default(now()) @updatedAt @db.Timestamptz()
  User           User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  Organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)

  @@unique([organizationId, userId])
  @@schema("org")
}

model Owner {
  id             String       @id @default(cuid())
  organizationId String
  userId         String
  createdAt      DateTime     @default(now()) @db.Timestamptz()
  updatedAt      DateTime     @default(now()) @updatedAt @db.Timestamptz()
  User           User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  Organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)

  @@unique([organizationId, userId])
  @@schema("org")
}

model Manager {
  id             String       @id @default(cuid())
  organizationId String
  userId         String
  calendarId     String       @unique
  createdAt      DateTime     @default(now()) @db.Timestamptz()
  updatedAt      DateTime     @default(now()) @updatedAt @db.Timestamptz()
  User           User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  Organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)

  @@unique([organizationId, userId])
  @@schema("org")
}

model Address {
  id                  String        @id @default(cuid())
  organizationId      String
  phone1              String
  phone2              String?
  mobilePhone1        String?
  mobilePhone2        String?
  fax                 String?
  address             String
  cityId              Int?
  stateId             Int?
  countryId           Int?
  postalCode          String?
  timeZone            String?
  patientId           String?
  createdAt           DateTime      @default(now()) @db.Timestamptz()
  updatedAt           DateTime      @updatedAt @db.Timestamptz()
  OwnedByOrganization Organization  @relation("OrganizationOwnedAddresses", fields: [organizationId], references: [id], onDelete: Cascade)
  Organization        Organization? @relation("OrganizationAddress")
  City                City?         @relation(fields: [cityId], references: [id], onDelete: SetNull)
  State               State?        @relation(fields: [stateId], references: [id], onDelete: SetNull)
  Country             Country?      @relation(fields: [countryId], references: [id], onDelete: SetNull)

  @@schema("org")
}
