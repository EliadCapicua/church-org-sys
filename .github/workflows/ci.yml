name: CI

on:
  pull_request:
    branches: ["*"]
  push:
    branches: ["main"]
  merge_group:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

# You can leverage Vercel Remote Caching with Turbo to speed up your builds
# @link https://turborepo.org/docs/core-concepts/remote-caching#remote-caching-on-vercel-builds
env:
  FORCE_COLOR: 3
  TURBO_TEAM: ${{ vars.TURBO_TEAM }}
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}

jobs:
  format-and-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup
        uses: ./tooling/github/setup

      - name: Lint
        run: pnpm format-and-lint && pnpm lint:ws

  typecheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup
        uses: ./tooling/github/setup

      - name: Test .env
        run: cp .env.test .env

      - name: Typecheck
        run: pnpm typecheck

  test:
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup
        uses: ./tooling/github/setup

      - name: Run postgres docker container
        run: docker compose up -d postgres_test localstack

      - name: Test .env
        run: cp .env.test .env

      - name: Apply DB Migration into Test container
        run: pnpm db:deploy

      - name: Run Test Suite
        run: pnpm test
      
      - name: Teardown Docker container
        run: docker compose down

      - name: Coverage Report
        uses: davelosert/vitest-coverage-report-action@v2
        with:
          vite-config-path: ./tooling/vitest/vitest.config.ts
          json-summary-path: ./coverage/coverage-summary.json
          json-final-path: ./coverage/coverage-final.json

  e2e:
    permissions: write-all
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup
        uses: ./tooling/github/setup

      - name: Install Playwright Browsers
        run: pnpm exec playwright install --with-deps

      - name: Run postgres docker container
        run: docker compose up -d postgres_test localstack

      - name: Test .env
        run: cp .env.test .env

      - name: Run Playwright tests
        run: pnpm e2e:ci

      - name: Teardown Docker container
        run: docker compose down

      # - uses: actions/upload-artifact@v4
      #   if: always()
      #   with:
      #     name: playwright-report
      #     path: ./packages/web-test/playwright-report/
      #     retention-days: 1

      - uses: daun/playwright-report-summary@v3
        if: always()
        with:
          report-file: ./packages/web-test/test-results.json